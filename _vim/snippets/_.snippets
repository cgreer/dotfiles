# Global snippets  

# bash loop stuff

# tagging
snippet tagit
	#TAG::${1:tags}::

snippet test
	hello
	`strftime("%B %d, %Y")`

snippet thought
	id::`~/Dropbox/projects/id_gen/get_id.py ~/Dropbox/projects/note_tagging/IDS`
	${1:}
	timestamp::`date +%F-%M-%S`
	tags::${2:}

#file in/out
snippet parseFile
	with open(${1:fN}, 'r') as f:
		for line in f:
			ls = line.strip().split('\t')
			${2:}

snippet opencloser
	f = open(${1:fnn}, 'r')
	${2:}
	f.close()
snippet openclosew
	f = open(${1:fnn}, 'w')
	${2:}
	f.close()

snippet sscript
	import bioLibCG
	from cgNexus import Nexus
	import cgDL
	from cgAutoCast import autocast
	from cgAutoKeyWord import autokey
	from bioLibJA import subit
	from cgLog import Logger 
	logger = Logger(0)

	def ${1:name}(${2:fN}):
		${3:}
	
	if __name__ == "__main__":
		import sys
		assert sys.argv[1] in globals(), "Need name of fxn to run from command line!"
		fxnToRun = globals()[sys.argv[1]] 
		fxnToRun(*sys.argv[2:])

snippet fxnscript
	if __name__ == "__main__":
		import sys
		assert sys.argv[1] in globals(), "Need name of fxn to run from command line!"
		fxnToRun = globals()[sys.argv[1]] 
		fxnToRun(*sys.argv[2:])

#NX saving/loading			
snippet load
	${1:NX} = Nexus(${2:fN}, ${3:fFN})
	${4:NX}.load([''])
snippet save
	${1:DC}.save()

#dict loading
snippet colDict
	cgDL.dictFromColumns(${1:fName}, (${2:}, ${3:}), (${4:'string'}, ${5:'stringList'}))

snippet colList
	cgDL.listFromColumns(${1:fName}, [${2:columns}], [${3:'int'}])
	
#other
snippet stringList
	'\t'.join([str(x) for x in ${1: list})
	${2:}


# for shortcut files or text files in general
snippet categ
	##################################
	## ${1:title}
	#################################
snippet sub
	[---${1:title}---]
snippet bullet
	:-${1:title}-:
snippet note
	(Note: ${1:note} )
snippet dir
	(Dir: ${1:dir} )


