# Global snippets  
snippet savefig
	plt.savefig(imgName, bbox_inches='tight', pad_inches=1)

snippet ps
	bioLibCG.printSeldomly(${1:}, 5)

# bash loop stuff
snippet doProcess
	echo "..${1:process}" \`date\`
	r="L_V"
	for i in ?; do ~/exec/qJobX3.sh ~/exec/qDoAll.sh ${r//L_V/${i}}; limitJobs.py 30; done | trackJobs.py
	echo "..done" \`date\`


# tagging

snippet tagit
	#TAG::${1:tags}::

#file in/out
snippet parseFile
	with open(${1:fN}, 'r') as f:
		for line in f:
			ls = line.strip().split('\t')
			${2:}

snippet opencloser
	f = open(${1:fnn}, 'r')
	${2:}
	f.close()
snippet openclosew
	f = open(${1:fnn}, 'w')
	${2:}
	f.close()

snippet test
	blah blah blah

#starters
snippet ifscript
	if __name__ == "__main__":
		import sys
		if sys.argv[1] == "help":
			bioLibCG.gd(sys.argv[0])
		else:
			bioLibCG.submitArgs(globals()[sys.argv[1]], sys.argv[1:])

snippet sscript
	import bioLibCG
	from cgNexus import Nexus
	import cgDL
	from cgAutoCast import autocast
	from cgAutoKeyWord import autokey
	from bioLibJA import subit
	from cgLog import Logger 
	logger = Logger(0)

	def ${1:name}(${2:fN}):
		${3:}
	
	if __name__ == "__main__":
		import sys
		assert sys.argv[1] in globals(), "Need name of fxn to run from command line!"
		fxnToRun = globals()[sys.argv[1]] 
		fxnToRun(*sys.argv[2:])

#NX saving/loading			
snippet load
	${1:NX} = Nexus(${2:fN}, ${3:fFN})
	${4:NX}.load([''])
snippet save
	${1:DC}.save()

#dict loading
snippet colDict
	cgDL.dictFromColumns(${1:fName}, (${2:}, ${3:}), (${4:'string'}, ${5:'stringList'}))

snippet colList
	cgDL.listFromColumns(${1:fName}, [${2:columns}], [${3:'int'}])
	
#other
snippet stringList
	'\t'.join([str(x) for x in ${1: list})
	${2:}

snippet log
	logger.log(${1:})

# for shortcut files or text files in general
snippet categ
	##################################
	## ${1:title}
	#################################
snippet sub
	[---${1:title}---]
snippet bullet
	:-${1:title}-:
snippet note
	(Note: ${1:note} )
snippet dir
	(Dir: ${1:dir} )

#quick table
snippet quicktable
	${1:quickT} = cgNexusFlat.quickTable(${2:})
snippet qE
	('${1:'attName}', '${2:string}', ${3:'.'}, ${4:1})

#quick python
snippet la
	${1:listName}.append(${2:})
	${3:}
